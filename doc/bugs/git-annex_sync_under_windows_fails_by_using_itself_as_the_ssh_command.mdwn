### Please describe the problem.
I am cloning a remote annex repository to my Windows machine using git clone user@server:/home/user/data

After I perform git annex init, git annex sync fails with an error complaining that user@server is an invalid command (complete log below).

It appears that git-annex sync invokes the git-annex executable with parameters for the ssh command.

git config.sshcaching is false.


Thanks,

Johannes

PS:

I found that after reverting commit a6d54e49a0676e1c8e4b3202b29c7725f45fa784 the git fetch command will work, but git push origin will fail:

push origin [2015-06-21 00:25:32 ric] call: git ["--git-dir=.git","--work-tree=.","--literal-pathspecs","-c","core.bare=false","push","origin","+git-annex:synced/git-annex","annex/direct/master:synced/master"]
Bad port ''
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.


### What steps will reproduce the problem?

I tried setting up the repository many different ways, using git bash, cmd.exe or cygwin bash and always get the same error after git annex sync.


### What version of git-annex are you using? On what operating system?
C:\data_organization\data>git annex version
git-annex version: 5.20150611-g256b86b
build flags: Assistant Webapp Webapp-secure Pairing Testsuite S3 WebDAV DNS Feed
s Quvi TDFA TorrentParser
key/value backends: SHA256E SHA1E SHA512E SHA224E SHA384E SKEIN256E SKEIN512E MD
5E SHA256 SHA1 SHA512 SHA224 SHA384 SKEIN256 SKEIN512 MD5 WORM URL
remote types: git gcrypt S3 bup directory rsync web bittorrent webdav tahoe glac
ier ddar hook external
local repository version: 5
supported repository version: 5
upgrade supported from repository versions: 2 3 4

I am using Windows 8.1

### Please provide any additional information below.

[[!format sh """

C:\data_organization\data>git annex sync
commit  ok
pull origin
git-annex.exe: unknown command user@55.89.78.37

Usage: git-annex command [option ...]

Commonly used commands:

add             [PATH ...]         add files to annex
addurl          URL ...            add urls to annex
assistant                          automatically sync changes
copy            [PATH ...]         copy content of files to/from another reposit
ory
drop            [PATH ...]         indicate content of files not currently wante
d
edit            [PATH ...]         same as unlock
get             [PATH ...]         make content of annexed files available
help            [COMMAND]          display help
import          [PATH ...]         move and add files from outside git working c
opy
importfeed      URL ...            import files from podcast feeds
lock            [PATH ...]         undo unlock command
mirror          [PATH ...]         mirror content of files to/from another repos
itory
move            [PATH ...]         move content of files to/from another reposit
ory
rmurl           FILE URL           record file is not available at url
status          [PATH ...]         show the working tree status
sync            [REMOTE ...]       synchronize local repository with remotes
undo            [PATH ...]         undo last change to a file or directory
unlock          [PATH ...]         unlock files for modification
watch                              watch for changes and autocommit
webapp                             launch webapp

Repository setup commands:

dead            REMOTE ...         hide a lost repository or key
describe        REMOTE DESC        change description of a repository
direct                             switch repository to direct mode
enableremote    NAME [K=V ...]     enables use of an existing special remote
group           REMOTE DESC        add a repository to a group
groupwanted     GROUP [EXPR]       get or set groupwanted expression
indirect                           switch repository to indirect mode
init            DESC               initialize git-annex
initremote      NAME [K=V ...]     creates a special (non-git) remote
numcopies       NUMBER             configure desired number of copies
required        REMOTE [EXPR]      get or set required content expression
schedule        REMOTE [EXPR]      get or set scheduled jobs
semitrust       REMOTE ...         return repository to default trust level
trust           REMOTE ...         trust a repository
ungroup         REMOTE DESC        remove a repository from a group
untrust         REMOTE ...         do not trust a repository
vicfg                              edit git-annex's configuration
wanted          REMOTE [EXPR]      get or set preferred content expression

Repository maintenance commands:

addunused       NUM|RANGE ...      add back unused files
dropunused      NUM|RANGE ...      drop unused file content
expire          [REMOTE]:TIME ...  expire inactive repositories
fix             [PATH ...]         fix up symlinks to point to annexed content
forget                             prune git-annex branch history
fsck            [PATH ...]         check for problems
merge                              automatically merge changes from remotes
repair                             recover broken git repository
unused                             look for unused file content
upgrade                            upgrade repository layout

Query commands:

find            [PATH ...]         lists available files
info            [ITEM ...]         shows information about the specified item or
 the repository as a whole
list            [PATH ...]         show which remotes contain files
log             [PATH ...]         shows location log
map                                generate map of repositories
version                            show version info
whereis         [PATH ...]         lists repositories that have file content

Metadata commands:

metadata        [PATH ...]         sets or gets metadata of a file
vadd            FIELD=GLOB ...     add subdirs to current view
vcycle                             switch view to next layout
vfilter         FIELD=VALUE ...    filter current view
view            FIELD=VALUE ...    enter a view branch
vpop            [NUMBER]           switch back to previous view

Utility commands:

migrate         [PATH ...]         switch data to different backend
reinit          UUID|DESC          initialize repository, reusing old UUID
reinject        SRC DEST           sets content of annexed file
unannex         [PATH ...]         undo accidential add command
uninit          [PATH ...]         de-initialize git-annex and clean out reposit
ory

Plumbing commands:

checkpresentkey KEY REMOTE         check if key is present in remote
contentlocation KEY ...            looks up content for a key
diffdriver      [-- cmd --]        external git diff driver shim
dropkey         KEY ...            drops annexed content for specified keys
examinekey      KEY ...            prints information from a key
findref         REF                lists files in a git ref
fromkey         KEY PATH           adds a file using a specific key
lookupkey       FILE ...           looks up key used for file
pre-commit      [PATH ...]         run by git pre-commit hook
proxy           -- git command     safely bypass direct mode guard
readpresentkey  KEY UUID           read records of where key is present
registerurl     KEY URL            registers an url for a key
rekey           [PATH KEY ...]     change keys used for files
remotedaemon                       detects when remotes have changed, and fetche
s from them
resolvemerge                       resolve merge conflicts
setpresentkey   KEY UUID [1|0]     change records of where key is present
transferkey     KEY                transfers a key from or to a remote
transferkeys                       transfers keys

Testing commands:

fuzztest                           generates fuzz test files
test                               run built-in test suite
testremote      REMOTE             test transfers to/from a remote

fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
failed
push origin
git-annex.exe: unrecognized option `-p'

Usage: git-annex add [PATH ...] [option ...]
           --include-dotfiles  don't skip dotfiles
  -x GLOB  --exclude=GLOB      skip files matching the glob pattern
  -I GLOB  --include=GLOB      limit to files matching the glob pattern
           --largerthan=SIZE   match files larger than a size
           --smallerthan=SIZE  match files smaller than a size
           --not               negate next option
           --and               both previous and next option must match
           --or                either previous or next option must match
  -(                           open group of options
  -)                           close group of options

To see additional options common to all commands, run: git annex help options


fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

  Pushing to origin failed.

  (non-fast-forward problems can be solved by setting receive.denyNonFastforward
s to false in the remote's git config)
failed
git-annex: sync: 2 failed

C:\data_organization\data>


"""]]

> [[fixed|done]] I think. --[[Joey]]
