### Please describe the problem.

A bup remote has lost its UUID, even though it is defined in git's `config` file.

### What steps will reproduce the problem?

`cat config` gives
[[!format sh """
[core]
        repositoryformatversion = 0
        filemode = true
        bare = true
        logallrefupdates = false
        preloadIndex = true
        untrackedCache = true
[annex]
        uuid = b67bfb7e-3ae1-4cb5-be1c-44cd07a6724b
        version = 7
[filter "annex"]
        smudge = git-annex smudge %f
        clean = git-annex smudge --clean %f
[remote "holy-server-backup"]
        annex-buprepo = /media/pi/DiStephBackup/backup
        annex-uuid = 3af6c3c4-973a-481e-82d0-bfc15bff6f30
        annex-sync = false
[...]
"""]]

but `git annex info holy-server-backup` has forgotten the uuid (and the description), giving

[[!format sh """
uuid: 
description: 
remote: holy-server-backup
trust: semitrusted
cost: 110.0
type: bup
repo: /media/pi/DiStephBackup/backup
encryption: none
chunking: none
[...]
"""]]

Unsurprisingly, commands such as `git annex get --all --from=holy-server-backup` complain with

`git-annex: cannot determine uuid for holy-server-backup (perhaps you need to run "git annex sync"?)`

This has happened after I started using version 7 upgraded from version 6 (with `git annex upgrade`). Before then it was working like a charm.
And now I cannot revert to version 6...

I'm not sure where version 7 is trying to get the UUID from, if not from the git config file, and why there started to be a discrepancy.


### What version of git-annex are you using? On what operating system?

git-annex version: 7.20181106-g352f88226, standalone

[[!format sh """
operating system: linux arm
supported repository versions: 5 7
upgrade supported from repository versions: 0 1 2 3 4 5 6
"""]]



### Please provide any additional information below.

[[!format sh """
# If you can, paste a complete transcript of the problem occurring here.
# If the problem is with the git-annex assistant, paste in .git/annex/daemon.log


# End of transcript or log.
"""]]

### Have you had any luck using git-annex before? (Sometimes we get tired of reading bug reports all day and a lil' positive end note does wonders)

Yes, I love git-annex! has been helping me manage my files for years!
