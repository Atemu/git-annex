Hello. git-annex has been a wonderful program but I still find the occasional annoyances now and then. These tend to be small issues such as this one that I'm having with only one repository (other clones seem fine):

I use latin-1 directory names, such as "animação". This particular repository insists that all files under that particular directory are untracked. E.g. `"anima\303\247\303\243o/Anita/banner.jpg"`
If I ask git-annex `git-annex whereis animação/Anita/banner.jpg`, it will promptly show it knows where it is. Thus, the data seems to be safe, it appears to be just an issue of git reading the filesystem.

It is quite annoying to see all those hundreds of file names scrolling by every time I sync. Can someone suggest something to help me solve this issue? Here is some more information.

    git-annex version: 7.20190912-gab739242a3
    build flags: Assistant Webapp Pairing S3 WebDAV Inotify DBus DesktopNotify TorrentParser MagicMime Feeds Testsuite
    dependency versions: aws-0.21.1 bloomfilter-2.0.1.0 cryptonite-0.26 DAV-1.3.3 feed-1.2.0.0 ghc-8.6.5 http-client-0.6.4 persistent-sqlite-2.10.5 torrent-10000.1.1 uuid-1.3.13 yesod-1.6.0
    key/value backends: SHA256E SHA256 SHA512E SHA512 SHA224E SHA224 SHA384E SHA384 SHA3_256E SHA3_256 SHA3_512E SHA3_512 SHA3_224E SHA3_224 SHA3_384E SHA3_384 SKEIN256E SKEIN256 SKEIN512E SKEIN512 BLAKE2B256E BLAKE2B256 BLAKE2B512E BLAKE2B512 BLAKE2B160E BLAKE2B160 BLAKE2B224E BLAKE2B224 BLAKE2B384E BLAKE2B384 BLAKE2BP512E BLAKE2BP512 BLAKE2S256E BLAKE2S256 BLAKE2S160E BLAKE2S160 BLAKE2S224E BLAKE2S224 BLAKE2SP256E BLAKE2SP256 BLAKE2SP224E BLAKE2SP224 SHA1E SHA1 MD5E MD5 WORM URL
    remote types: git gcrypt p2p S3 bup directory rsync web bittorrent webdav adb tahoe glacier ddar git-lfs hook external
    operating system: linux x86_64
    supported repository versions: 7
    upgrade supported from repository versions: 0 1 2 3 4 5 6
    local repository version: 7

The filesystem is an ext4.

    tune2fs 1.45.3 (14-Jul-2019)
    Filesystem volume name:   Toshiba3
    Last mounted on:          /media/gus/Toshiba3
    Filesystem UUID:          8be65206-e627-417b-9ead-2ff0a78bc42e
    Filesystem magic number:  0xEF53
    Filesystem revision #:    1 (dynamic)
    Filesystem features:      has_journal ext_attr resize_inode dir_index filetype needs_recovery extent 64bit flex_bg sparse_super large_file huge_file uninit_bg dir_nlink extra_isize
    Filesystem flags:         signed_directory_hash 
    Default mount options:    user_xattr acl
    Filesystem state:         clean
    Errors behavior:          Continue
    Filesystem OS type:       Linux
    Inode count:              183148544
    Block count:              732566385
    Reserved block count:     73256
    Free blocks:              44132786
    Free inodes:              183067035
    First block:              0
    Block size:               4096
    Fragment size:            4096
    Group descriptor size:    64
    Reserved GDT blocks:      1024
    Blocks per group:         32768
    Fragments per group:      32768
    Inodes per group:         8192
    Inode blocks per group:   512
    Flex block group size:    16
    Filesystem created:       Tue Jul 11 14:43:53 2017
    Last mount time:          Sat Sep 21 11:49:39 2019
    Last write time:          Sat Sep 21 11:49:39 2019
    Mount count:              192
    Maximum mount count:      -1
    Last checked:             Tue Jul 11 14:43:53 2017
    Check interval:           0 (<none>)
    Lifetime writes:          3387 GB
    Reserved blocks uid:      0 (user root)
    Reserved blocks gid:      0 (group root)
    First inode:              11
    Inode size:	          256
    Required extra isize:     32
    Desired extra isize:      32
    Journal inode:            8
    Default directory hash:   half_md4
    Directory Hash Seed:      2f0f1511-b2fd-4d47-a528-c91f3caf50b9
    Journal backup:           inode blocks
