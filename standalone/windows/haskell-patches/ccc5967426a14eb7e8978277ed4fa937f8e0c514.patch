From 017b26c0198d6982e47600b66235d01990e49fef Mon Sep 17 00:00:00 2001
From: mvoidex <voidex@live.com>
Date: Fri, 18 Jan 2013 15:22:03 +0400
Subject: [PATCH 1/2] Fixed error (getModificationTime returns UTCTime, not
 ClockTime)

---
 src/System/IO/WindowsCompat.hs | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/System/IO/WindowsCompat.hs b/src/System/IO/WindowsCompat.hs
index d910dca..38820bb 100644
--- a/src/System/IO/WindowsCompat.hs
+++ b/src/System/IO/WindowsCompat.hs
@@ -56,6 +56,8 @@ import System.IO.StatCompat
 import System.Posix.Consts
 import System.Time.Utils
 import System.Directory
+import Data.Time
+import Data.Time.Clock.POSIX
 
 -- these types aren't defined here
 
@@ -112,6 +114,9 @@ otherModes = 0o00007
 accessModes :: FileMode
 accessModes = ownerModes .|. groupModes .|. otherModes
 
+utcTimeToSeconds :: Num a => UTCTime -> a
+utcTimeToSeconds = fromInteger . floor . utcTimeToPOSIXSeconds
+
 ----------- stat
 type FileStatus = FileStatusCompat
 getFileStatus :: FilePath -> IO FileStatus
@@ -120,7 +125,7 @@ getFileStatus fp =
        isdir <- doesDirectoryExist fp
        perms <- getPermissions fp
        modct <- getModificationTime fp
-       let epochtime = clockTimeToEpoch modct
+       let epochtime = utcTimeToSeconds modct
        return $ FileStatusCompat {deviceID = -1,
                                   fileID = -1,
                                   fileMode = if isfile then regularFileMode
-- 
1.8.1.6


From 6991e46b613fd929fd8e9bc49ae13c003a3b740c Mon Sep 17 00:00:00 2001
From: Hamish Mackenzie <Hamish.K.Mackenzie@googlemail.com>
Date: Sun, 12 May 2013 18:08:16 +1200
Subject: [PATCH 2/2] Fix for older versions of directory (where
 getModificationTime still returns ClockTime)

---
 src/System/IO/WindowsCompat.hs | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/System/IO/WindowsCompat.hs b/src/System/IO/WindowsCompat.hs
index 38820bb..8f7b476 100644
--- a/src/System/IO/WindowsCompat.hs
+++ b/src/System/IO/WindowsCompat.hs
@@ -125,7 +125,11 @@ getFileStatus fp =
        isdir <- doesDirectoryExist fp
        perms <- getPermissions fp
        modct <- getModificationTime fp
+#if MIN_VERSION_directory(1,2,0)
        let epochtime = utcTimeToSeconds modct
+#else
+       let epochtime = clockTimeToEpoch modct
+#endif
        return $ FileStatusCompat {deviceID = -1,
                                   fileID = -1,
                                   fileMode = if isfile then regularFileMode
-- 
1.8.1.6

