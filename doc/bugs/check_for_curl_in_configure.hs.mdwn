I thought this might be useful, since curl is being used for the URL backend, it might be worth checking for it's existence.

<pre>
diff --git a/configure.hs b/configure.hs
index 772ba54..1a563e0 100644
--- a/configure.hs
+++ b/configure.hs
@@ -13,6 +13,7 @@ tests = [
        , TestCase "uuid generator" $ selectCmd "uuid" ["uuid", "uuidgen"]
        , TestCase "xargs -0" $ requireCmd "xargs_0" "xargs -0 </dev/null"
        , TestCase "rsync" $ requireCmd "rsync" "rsync --version >/dev/null"
+       , TestCase "curl" $ requireCmd "curl" "curl --version >/dev/null"
        , TestCase "unicode FilePath support" $ unicodeFilePath
        ] ++ shaTestCases [1, 256, 512, 224, 384]
</pre>

> Well, curl is an optional extra, so requireCmd is too strong. Changed
> to testCmd and applied, thank you!
>
> I thought about actually *using* the resulting SysConfig.curl
> to disable the URL backend if False.. but probably it's better
> to just let it fail if curl is not available. Although, if we wanted
> to add a check for wget or something and use it when curl was not
> available, that might be worth doing. --[[Joey]] 

also in Backend/URL.hs is it worth making a minor change to the way curl is called (I'm not sure if the following is correct or not)

> It's correct, typewise, but I don't see any real reason to bother
> with the change. But I do appreciate patches, which have been rare
> so far, probaby because of Haskell.. :) --[[Joey]] 

<pre>
diff --git a/Backend/URL.hs b/Backend/URL.hs
index 29dc8fe..4afcf86 100644
--- a/Backend/URL.hs
+++ b/Backend/URL.hs
@@ -50,10 +50,13 @@ dummyFsck _ _ _ = return True
 dummyOk :: Key -> Annex Bool
 dummyOk _ = return True
 
+curl :: [CommandParam] -> IO Bool
+curl = boolSystem "curl"
+
 downloadUrl :: Key -> FilePath -> Annex Bool
 downloadUrl key file = do
        showNote "downloading"
        showProgress -- make way for curl progress bar
-       liftIO $ boolSystem "curl" [Params "-# -o", File file, File url]
+       liftIO $ curl [Params "-# -o", File file, File url]
        where
                url = join ":" $ drop 1 $ split ":" $ show key 
</pre>
