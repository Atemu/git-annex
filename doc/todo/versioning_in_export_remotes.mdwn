Some remotes like S3 support versioning of data stored in them.
When git-annex updates an export, it deletes the old
content from eg the S3 bucket, but with versioning enabled, S3 retains the
content and it can be accessed using a version ID (that S3 returns when
storing the content). So it should be possible for git-annex to allow
downloading old versions of files from such a remote.

Basically, store the S3 version ID in git-annex branch and support
downloading using it. 

But this has the problem that dropping makes git-annex think it's not in S3
any more, while what we want for export is for it to be removed from the
current bucket, but still tracked as present in S3.

The drop from S3 could fail, or "succeed" in a way that prevents the location
tracking being updated to say it lacks the content. Failing is how bup deals
with it. It seems confusing to have a drop appear to succeed but not really drop,
especially since dropping again would seem to do something a second time.

This does mean that git-annex drop/sync --content/assistant might try to do a
lot of drops from the remote, and generate a lot of noise when they fail.
Which is kind of ok for drop, since the user should be told that they can't
delete the data. Could add a way to say "this remote does not support drop",
and make at sync --content/assistant use that.

Note that git-annex export does not rely on location tracking to determine
which files still need to be sent to an export. It uses the export database
to keep track of that. This is important, because the location tracking
won't be updated, as discussed above.

## final plan

Add an "appendOnly" field to Remote, indicating it retains all content stored
in it.

Let S3 remotes be configured with versioned=yes or something like that
(what does S3 call the feature?) which enables appendOnly.

Make S3 store version IDs for uploaded keys in the per-remote log when so
configured, and use them for when retrieving keys and for checkpresent.

Make S3 refuse to removeKey when configured appendOnly, failing with an error.

Make `git annex export` check appendOnly when removing a file from an
export, and not update the location log, since the remote still contains
the content.

Make git-annex sync and the assistant skip trying to drop from appendOnly
remotes since it's just going to fail.

Make exporttree=yes remotes that are appendOnly be trusted, and not force
verification of content, since the usual concerns about losing data when an
export is updated by someone else don't apply.

Make bup an appendOnly remote.

When a file was deleted from an exported tree, and then put back
in a later exported tree, it might get re-uploaded even though the content
is still retained in the versioned remote. S3 might have a way to avoid
such a redundant upload, if so it could support using it.
