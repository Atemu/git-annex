### Please describe the problem.

Setting `remote.<name>.annex-checkuuid` to `false` renders remote `<name>` inaccessible for git-annex, i.e., when using commands such as `get`.

### What steps will reproduce the problem?

    $ cat git-annex-checkuuid.sh
    pushd $(mktemp -d)

    git init origin
    pushd origin
    git annex init origin
    touch blob
    git annex add blob
    git annex sync

    popd
    git clone origin clone
    pushd clone
    git annex init clone
    git config remote.origin.annex-checkuuid false
    git annex get blob

    $ bash git-annex-checkuuid.sh
    â€¦
    get blob
      Unable to access these remotes: origin

      Try making some of these repositories available:
        d27a9c2d-af76-4b01-8335-bc2d72a1d28a -- [origin]
    failed
    git-annex: get: 1 failed

### What version of git-annex are you using? On what operating system?

    git-annex version: 6.20180529-g33834140e                                                                                                                                                      
    build flags: Assistant Webapp Pairing S3(multipartupload)(storageclasses) WebDAV Inotify DBus DesktopNotify ConcurrentOutput TorrentParser MagicMime Feeds Testsuite
    dependency versions: aws-0.20 bloomfilter-2.0.1.0 cryptonite-0.25 DAV-1.3.2 feed-1.0.0.0 ghc-8.4.2 http-client-0.5.12.1 persistent-sqlite-2.8.1.2 torrent-10000.1.1 uuid-1.3.13 yesod-1.6.0
    key/value backends: SHA256E SHA256 SHA512E SHA512 SHA224E SHA224 SHA384E SHA384 SHA3_256E SHA3_256 SHA3_512E SHA3_512 SHA3_224E SHA3_224 SHA3_384E SHA3_384 SKEIN256E SKEIN256 SKEIN512E SKEIN512 BLAKE2B256E BLAKE2B256 BLAKE2B512E BLAKE2B512 BLAKE2B160E BLAKE2B160 BLAKE2B224E BLAKE2B224 BLAKE2B384E BLAKE2B384 BLAKE2S256E BLAKE2S256 BLAKE2S160E BLAKE2S160 BLAKE2S224E BLAKE2S224 BLAKE2SP256E BLAKE2SP256 BLAKE2SP224E BLAKE2SP224 SHA1E SHA1 MD5E MD5 WORM URL
    remote types: git gcrypt p2p S3 bup directory rsync web bittorrent webdav adb tahoe glacier ddar hook external

> [[fixed|done]] --[[Joey]]
