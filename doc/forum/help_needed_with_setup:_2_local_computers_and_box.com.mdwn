**EDIT: partially solved**
*by looking around I might have come upon the solution to my own question: the webapp uses a shared cipher for encryption, and since the cipher is stored in the git repository, only the contents will be synced in the encrypted repository (in the cloud in this case). So both computers need to be online to sync, because the cloud only has the annexed files and not the whole git repository. I'm going to try with the hybrid or pub enc method to see if that'd work.*

---

**EDIT2: still not working**
I've tried with hybrid encryption and with no encryption and it's still not working. Help? Is it a limitation of webdav remotes? Can they store the git repository as well as the annexed files? 

---


Hello everyone,

I need some help with this use-case: two local computers, paired with git annex, also sync in the cloud (box.com) to pull and push changes even when the other local computer is offline.

I've tried the following steps with the webapp, but the result isn't working so far:

1. Create repo in *Computer A* through the webapp.
2. Create repo in *Computer B* through the webapp.
3. In *Computer A*, add box.com encrypted repository and put it in the 'backup' group (Just to make sure that it gets everything but I've also tried re-doing the whole procedure with box.com set to 'transfer' (as suggested by the webapp), and still will not work).
4. Pair computer *A* and *B* over the local network. 
5. Now also enable box.com in *B* (the cloud repo has appeared thanks to pairing)

So far, when everyone is online, everything syncs correctly. Creating "file1" in *A*, will sync it to all repositories as shown by "git annex whereis file1".

The problem is that this won't work for the following use-case, which I'm currently trying to solve:

(continued from the previous steps)

6. *B* goes offline.
7. *A* creates a file (or makes a change), which is correctly synced to box.com (*whereis* shows that it's there too). As expected, syncing with B fails because B is offline.
8. *A* goes offline.
9. *B* come back online.

The expected behavior here is that B gets the new file (or change) from box.com, since it's been pushed there by *A*, but this doesn't happen. Strangely, the new file doesn't get in *B* until *A* comes back online.

**What am I missing? Should I do something differently to get this behavior?**

Thanks everyone for your help.
