[[!comment format=mdwn
 username="joey"
 subject="""comment 2"""
 date="2015-02-06T17:30:50Z"
 content="""
Since someone also mentioned this problem on IRC (I don't know if it was
you), I am wondering if this is an easy mistake to make. I guess so; you
installed boto from Arch's packages and it included a /usr/bin/glacier..
Same could happen if using pip to install boto, I think.

I don't want to support multiple different glacier interface programs. The
eventual plan is to move glacier support into git-annex, using a haskell
library.

The other concerning thing is that git-annex seems to have reported that
some of the transfers succeeded. It seems, very unfortunately, that
the glacier command from boto exits 0 when given unsupported
parameters. So, git-annex will think a transfer succeeded, at least some of
the time (sometimes gpg notices that the encrypted output is not all
consumed).

I think that the best fix will be to make glacier-cli install a
"glacier-cli" program. Then git-annex can run that instead of "glacier" and
will be much less likely to run into namespace pollution.

I have filed 2 bug reports:

* [boto's glacier should exit nonzero after displaying usage](https://github.com/boto/boto/issues/2942)
* [glacier-cli should provide a glacier-cli command](https://github.com/basak/glacier-cli/issues/30)

I have also put a really ugly hack into git-annex to detect when the wrong
glacier is installed, and refuse to use it.
"""]]
