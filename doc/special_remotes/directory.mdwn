This special remote type stores file contents in directory.

One use case for this would be if you have a removable drive that
you want to use to sneakernet files between systems (possibly with
[[encrypted|encryption]] contents). Just set up both systems to use
the drive's mountpoint as a directory remote.

Note that directory remotes have a special directory structure
(by design, the same as the \[[rsync|rsync]] remote).
If you just want two copies of your repository with the files "visible"
in the tree in both, the directory special remote is not what you want.
Instead, you should use a regular `git clone` of your git-annex repository.

## configuration

These parameters can be passed to `git annex initremote` to configure the
remote:

* `directory` - The path to the directory where the files should be stored
  for the remote. The directory must already exist. Typically this will
  be an empty directory, or a directory already used as a directory remote.

* `encryption` - One of "none", "hybrid", "shared", or "pubkey".
  See [[encryption]].

* `keyid` - Specifies the gpg key to use for [[encryption]].

* `chunksize` - Avoid storing files larger than the specified size in the
  directory. For use on directories on mount points that have file size
  limitations. The default is to never chunk files.  
  The value can use specified using any commonly used units.
  Example: `chunksize=100 megabytes`  
  Note that enabling chunking on an existing remote with non-chunked
  files is not recommended.

Setup example:

	# git annex initremote usbdrive type=directory directory=/media/usbdrive/ encryption=none
	# git annex describe usbdrive "usb drive on /media/usbdrive/"
