The git-annex Windows port is not ready for prime time. But it does exist
now! --[[Joey]] 

## status

* Does not work with Cygwin's build of git (that git does not consistently
  support use of DOS style paths, which git-annex uses on Windows). 
  Must use Msysgit.
* rsync special remotes with a rsyncurl of a local directory are known
  buggy. (git-annex tells rsync C:foo and it thinks it means a remote host
  named C...)
* Ssh connection caching does not work on Windows, so `git annex get`
  has to connect twice to the remote system over ssh per file, which
  is much slower than on systems supporting connection caching.
* `git annex assistant` has not been tested, is probably quite incomplete
  and/or buggy.
* Doesn't daemonize. Maybe use
  <http://hackage.haskell.org/package/Win32-services>
  or perhaps easier,
  <http://hackage.haskell.org/package/Win32-services-wrapper>
* XMPP library not yet built.
  
  This should work to install the deps, using libs from cygwin

	cabal install libxml-sax --extra-lib-dirs=C:\\cygwin\\lib --extra-include-dirs=C:\\cygwin\\usr\\include\\libxml2
	cabal install gnuidn --extra-lib-dirs=C:\\cygwin\\lib --extra-include-dirs=C:\\cygwin\\usr\\include\\
	cabal install gnutls --extra-lib-dirs=C:\\cygwin\\lib --extra-include-dirs=C:\\cygwin\\usr\\include\\

  While the 1st line works, the rest fail oddly. Looks like lack of
  quoting when cabal runs c2hs and gcc, as "Haskell Platform" is
  taken as 2 filenames. Needs investigation why this happens here
  and not other times..

  Also needs gsasl, which is not in cygwin. 
  See <http://josefsson.org/gsasl4win/README.html>
* Switching between local repos in webapp hangs.
* After adding a local repo and trying to switch to it, and rebooting,
  starting git-annex from the menu failed with `file://C:\Documents does
  not exist`. The local repo was `C:\Documents and Settings\...\...`
* View debug log is empty in windows -- all log must goes to console.
* Local pairing seems to fail, after acking on Linux box, it stalls.
* rsync.net setup failed. Seems to have generated a hostname including
  the directory somehow.
* gcrypt is not ported to windows (and as a shell script, may need
  to be rewritten)
* webapp lets user choose to encrypt repo, and generate gpg key,
  before checking that gcrypt is not installed
* glacier-cli is not easily available (probably)
* When clicking on the Files at the top of the webapp, a file
  browser *is* opened, but it has a Z-order underneath the web browser.
* Incremental fsck sets the sticky bit to record when a file is fscked,
  and this is not done on windows, so fsck doesn't behave incrementally
  there.

## stuff needing testing

* test S3 and box.com setup in webapp now that they should work..
* test that adding a repo on a removable drive works; that git is synced to
  it and files can be transferred to it and back

