[[!comment format=mdwn
 username="jason.dixon.email@aa0e536a2ec2877d6f666108dbbc6e39bbe87ac0"
 nickname="jason.dixon.email"
 avatar="http://cdn.libravatar.org/avatar/fbe9050fc83bbd536d307d87ea14d4bc"
 subject="Does git annex add do something different to smudge filter add?"
 date="2019-10-19T00:51:13Z"
 content="""
When adding a file with annex vs add (largefiles enabled) the same content is added to git but the result seems different. Then it goes and tries to delete the file and process busy, yadda yadda.

```
$ git status
On branch adjusted/master(unlocked)
Untracked files:
  (use \"git add <file>...\" to include in what will be committed)
        2018/18-09-28 bashed tooth/

nothing added to commit but untracked files present (use \"git add\" to track)

$ git annex add 2018/18-09-28\ bashed\ tooth/18-09-28\ bashed\ tooth_001\[archer\].mp4
add 2018/18-09-28 bashed tooth/18-09-28 bashed tooth_001[archer].mp4
ok
(recording state in git...)

$ git ls-files -s 2018/18-09-28\ bashed\ tooth/
100644 d04fdcb2861e5cd57525db2bbfb7125bd64e99bd 0       2018/18-09-28 bashed tooth/18-09-28 bashed tooth_001[archer].mp4

$ git cat-file -p d04fdcb2861e5cd57525db2bbfb7125bd64e99bd
/annex/objects/SHA256E-s14269326--60ca9d2727cba35a06e308eb7aa9f03f0438599a9a611dcdfa897556791f7b9a.mp4

$ git status
git-annex.exe: .\2018/18-09-28 bashed tooth/18-09-28 bashed tooth_001[archer].mp4: DeleteFile \"\\\\?\\D:\\Pictures\\Photos_again\\2018\\18-09-28 bashed tooth\\18-09-28 bashed tooth_001[archer].mp4\": permission denied (The process cannot access the file because it is being used by another process.)
error: external filter 'git-annex smudge --clean -- %f' failed 1
error: external filter 'git-annex smudge --clean -- %f' failed
Refresh index: 100% (13959/13959), done.
On branch adjusted/master(unlocked)
Changes to be committed:
  (use \"git restore --staged <file>...\" to unstage)
        new file:   2018/18-09-28 bashed tooth/18-09-28 bashed tooth_001[archer].mp4

Changes not staged for commit:
  (use \"git add <file>...\" to update what will be committed)
  (use \"git restore <file>...\" to discard changes in working directory)
        modified:   2018/18-09-28 bashed tooth/18-09-28 bashed tooth_001[archer].mp4

$ git reset

$ git add 2018/18-09-28\ bashed\ tooth/18-09-28\ bashed\ tooth_001\[archer\].mp4

$ git ls-files -s 2018/18-09-28\ bashed\ tooth/
100644 d04fdcb2861e5cd57525db2bbfb7125bd64e99bd 0       2018/18-09-28 bashed tooth/18-09-28 bashed tooth_001[archer].mp4

$ git cat-file -p d04fdcb2861e5cd57525db2bbfb7125bd64e99bd
/annex/objects/SHA256E-s14269326--60ca9d2727cba35a06e308eb7aa9f03f0438599a9a611dcdfa897556791f7b9a.mp4

$ git status
On branch adjusted/master(unlocked)
Changes to be committed:
  (use \"git restore --staged <file>...\" to unstage)
        new file:   2018/18-09-28 bashed tooth/18-09-28 bashed tooth_001[archer].mp4
``` 
"""]]
