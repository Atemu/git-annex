[[!comment format=mdwn
 username="joey"
 subject="""comment 1"""
 date="2018-06-12T16:17:30Z"
 content="""
groupwanted expressions are only used when there is only one that the
repository could use. The repository can be in two groups and if only one
of the groups has a groupwanted expression, it will be used, but if both
do, neither expression will be used. 

This limitation to exactly one expression also holds for standard
preferred content expressions (which is documented).
git-annex does not try to combine together two expressions with OR.
Why not? Well, consider the standard preferred content expressions for the 
client and transfer groups. The one for transfer looks at whether client
repositories have the content:
`not (inallgroup=client and copies=client:2) ...`

If a repository is both a transfer repository and a client at the same
time, that would make it want to have content as long as not all clients
contain the content -- so once all other clients get the content, the
repository would want to drop its copy. But then, it would see that
not all client repositories now have the content (since it doesn't!) and
want to get it. And potentially round and round.. 

git-annex actually detects and prevents this kind of drop/get cycle
(probably), but the right behavior of combining those two groupwanted
expressions is at best undefined. So it's better to have the user write
down an expression with what they really want to happen than try to OR
expressions.

I've updated the docs for groupwanted to note that it's only used when one 
of a repos's groups has it.
"""]]
