### Please describe the problem.
Using the incremental fsck starts from the beginning over and over again. Currently, it's not possible to check a repo in smaller steps.

### What steps will reproduce the problem?
Start an incremental fsck: `git-annex fsck -S`

Abort the operation either by `Ctrl+C` or `--time-limit=1s`

Continue the incremental fsck: `git-annex fsck -m`

or try this test script: https://gist.github.com/parhuzamos/a72236e24a83bdee5830

The check starts with same file as the first time and takes the same files again.

### What version of git-annex are you using? On what operating system?
git-annex: 5.20150727-g06082d8 
Linux: 3.13.0-57-generic #95-Ubuntu SMP Fri Jun 19 09:28:15 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux 

Also tried with `docker/ubuntu:latest` using a clean install from https://downloads.kitenet.net/git-annex/linux/current/git-annex-standalone-amd64.tar.gz

git-annex: 5.20150522-gb199d65 
Linux: 3.16.0-43-generic #58-Ubuntu SMP Fri Jun 19 11:04:02 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux 

> I've adjusted the timing of the fsck checkpoints used in resumes some.
> Now it makes one every 5 minutes, or every 1000 files, whichever comes
> first. I could make this tunable, but I don't think it's worth adding the
> complexity; this heuristic should work pretty well.
> 
> Another approach would be to catch sigint and commit the fsck database
> then, as is now done when --time-limit interrupts a fsck run.
> But, I am leery of complicating git-annex with signal handling,
> so I've not done that currently.
> 
> Also, documented this in fsck's man page. [[done]] --[[Joey]] 
