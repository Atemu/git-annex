[[!comment format=mdwn
 username="skew"
 subject="transcript"
 date="2015-05-14T04:37:33Z"
 content="""
Hey Joey, after playing around a bit more, I noticed that the behavior was happening when I'm in a subdirectory, but not when I'm in the root of the repo. I also managed to reproduce the issue with a new repo (and a different type of remote):

[[!format txt \"\"\"
[john@laptop tmp]$ git init annextest3
Initialized empty Git repository in /home/john/tmp/annextest3/.git/
[john@laptop tmp]$ cd annextest3/
[john@laptop annextest3]$ git annex init laptop
init laptop ok
(Recording state in git...)
[john@laptop annextest3]$ git annex initremote rsyncnet type=rsync rsyncurl=user@server.rsync.net:/path/to/annextest3 encryption=none
initremote rsyncnet ok
(Recording state in git...)
[john@laptop annextest3]$ mkdir docs
[john@laptop annextest3]$ echo \"first version\" > docs/test.txt
[john@laptop annextest3]$ git annex add docs/test.txt
add docs/test.txt ok
(Recording state in git...)
[john@laptop annextest3]$ git annex sync --content
commit  ok
copy docs/test.txt copy docs/test.txt (checking rsyncnet...) (to rsyncnet...) 
sending incremental file list
./
1a5/
1a5/235/
1a5/235/SHA256E-s14--0533c80dc85756cf8cd5181e68d6520f5ffc4585def452d26f59756a5c2548b1.txt/
1a5/235/SHA256E-s14--0533c80dc85756cf8cd5181e68d6520f5ffc4585def452d26f59756a5c2548b1.txt/SHA256E-s14--0533c80dc85756cf8cd5181e68d6520f5ffc4585def452d26f59756a5c2548b1.txt
             14 100%    0.00kB/s    0:00:00 (xfr#1, to-chk=0/5)
ok
(Recording state in git...)
[john@laptop annextest3]$ git annex whereis
whereis docs/test.txt (2 copies) 
  	139b18e5-1fd0-4144-a551-4e997333b8ae -- [rsyncnet]
   	7187a4c5-d9ae-471d-9b4b-843c37bfb3c3 -- laptop [here]
ok
[john@laptop annextest3]$ git annex unlock docs/test.txt
unlock docs/test.txt (copying...) ok
[john@laptop annextest3]$ echo \"second version\" > docs/test.txt 
[john@laptop annextest3]$ git annex add docs/test.txt
add docs/test.txt ok
(Recording state in git...)
[john@laptop annextest3]$ git annex sync --content
commit  ok
copy docs/test.txt copy docs/test.txt (checking rsyncnet...) (to rsyncnet...) 
sending incremental file list
6ad/
6ad/09f/
6ad/09f/SHA256E-s15--66ed1142ab3b2f1cdb29e8b81c9471444a5d9e6fb657a54d089073ab8bd34e27.txt/
6ad/09f/SHA256E-s15--66ed1142ab3b2f1cdb29e8b81c9471444a5d9e6fb657a54d089073ab8bd34e27.txt/SHA256E-s15--66ed1142ab3b2f1cdb29e8b81c9471444a5d9e6fb657a54d089073ab8bd34e27.txt
             15 100%    0.00kB/s    0:00:00 (xfr#1, to-chk=0/5)
ok
(Recording state in git...)
[john@laptop annextest3]$ git annex unused
unused . (checking for unused data...) (checking master...) 
  Some annexed data is no longer used by any files:
    NUMBER  KEY
    1       SHA256E-s14--0533c80dc85756cf8cd5181e68d6520f5ffc4585def452d26f59756a5c2548b1.txt
  (To see where data was previously used, try: git log --stat -S'KEY')
  
  To remove unwanted data: git-annex dropunused NUMBER
  
ok
[john@laptop annextest3]$ git annex unused --from rsyncnet
unused rsyncnet (checking for unused data...) (checking master...) 
  Some annexed data on rsyncnet is not used by any files:
    NUMBER  KEY
    1       SHA256E-s14--0533c80dc85756cf8cd5181e68d6520f5ffc4585def452d26f59756a5c2548b1.txt
  (To see where data was previously used, try: git log --stat -S'KEY')
  
  To remove unwanted data: git-annex dropunused --from rsyncnet NUMBER
  
ok
[john@laptop annextest3]$ cd docs/
[john@laptop docs]$ git annex unused
unused . (checking for unused data...) (checking master...) 
  Some annexed data is no longer used by any files:
    NUMBER  KEY
    1       SHA256E-s14--0533c80dc85756cf8cd5181e68d6520f5ffc4585def452d26f59756a5c2548b1.txt
  (To see where data was previously used, try: git log --stat -S'KEY')
  
  To remove unwanted data: git-annex dropunused NUMBER
  
ok
[john@laptop docs]$ git annex unused --from rsyncnet
unused rsyncnet (checking for unused data...) ok
[john@laptop docs]$ git annex whereis --unused
[john@laptop docs]$ cd ..
[john@laptop annextest3]$ git annex whereis --unused
[john@laptop annextest3]$ git annex unused
unused . (checking for unused data...) (checking master...) 
  Some annexed data is no longer used by any files:
    NUMBER  KEY
    1       SHA256E-s14--0533c80dc85756cf8cd5181e68d6520f5ffc4585def452d26f59756a5c2548b1.txt
  (To see where data was previously used, try: git log --stat -S'KEY')
  
  To remove unwanted data: git-annex dropunused NUMBER
  
ok
[john@laptop annextest3]$ git annex whereis --unused
whereis SHA256E-s14--0533c80dc85756cf8cd5181e68d6520f5ffc4585def452d26f59756a5c2548b1.txt (2 copies) 
  	139b18e5-1fd0-4144-a551-4e997333b8ae -- [rsyncnet]
   	7187a4c5-d9ae-471d-9b4b-843c37bfb3c3 -- laptop [here]
ok
[john@laptop annextest3]$
\"\"\"]]
"""]]
