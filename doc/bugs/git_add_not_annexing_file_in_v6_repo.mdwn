### Please describe the problem.

`git add` doesn't put files inrto the annex.  I suspect this is me, but I've checked it a few times now, and I'm pretty sure this worked last year.

### What steps will reproduce the problem?

Create v6 repo, create gitattributes to make anything a largefile, create file, `git add` it

### What version of git-annex are you using? On what operating system?

Tried current neurodebian and stretch

### Please provide any additional information below.

[[!format sh """
# If you can, paste a complete transcript of the problem occurring here.
# If the problem is with the git-annex assistant, paste in .git/annex/daemon.log

renn:/tmp$ mkdir test
renn:/tmp$ cd test
renn:/tmp/test$ git init
Initialized empty Git repository in /tmp/test/.git/
renn:/tmp/test$ git annex init --version=6
init  ok
(recording state in git...)
renn:/tmp/test$ git annex version
git-annex version: 6.20170101
build flags: Assistant Webapp Pairing Testsuite S3(multipartupload)(storageclasses) WebDAV Inotify DBus DesktopNotify ConcurrentOutput TorrentParser MagicMime Feeds Quvi
key/value backends: SHA256E SHA256 SHA512E SHA512 SHA224E SHA224 SHA384E SHA384 SHA3_256E SHA3_256 SHA3_512E SHA3_512 SHA3_224E SHA3_224 SHA3_384E SHA3_384 SKEIN256E SKEIN256 SKEIN512E SKEIN512 SHA1E SHA1 MD5E MD5 WORM URL
remote types: git gcrypt p2p S3 bup directory rsync web bittorrent webdav tahoe glacier ddar hook external
local repository version: 6
supported repository versions: 3 5 6
upgrade supported from repository versions: 0 1 2 3 4 5
operating system: linux x86_64
renn:/tmp/test$ git annex info
repository mode: indirect
trusted repositories: 0
semitrusted repositories: 3
        00000000-0000-0000-0000-000000000001 -- web
        00000000-0000-0000-0000-000000000002 -- bittorrent
        cccf82b9-37ff-4bec-9996-f78bd101a033 -- jk@renn:/tmp/test [here]
untrusted repositories: 0
transfers in progress: none
available local disk space: 340.69 gigabytes (+1 megabyte reserved)
local annex keys: 0
local annex size: 0 bytes
annexed files in working tree: 0
size of annexed files in working tree: 0 bytes
bloom filter size: 32 mebibytes (0% full)
backend usage: 
renn:/tmp/test$ echo '* annex.largefiles=anything' > .gitattributes
renn:/tmp/test$ git add .
renn:/tmp/test$ git commit -m init
[master (root-commit) ee0af94] init
 1 file changed, 1 insertion(+)
 create mode 100644 .gitattributes
renn:/tmp/test$ echo xxx>xxx
renn:/tmp/test$ git add .
renn:/tmp/test$ ls -l
total 4
-rw-rw-r-- 1 jk users 4 Feb 16 13:48 xxx
renn:/tmp/test$ git commit -m test
(recording state in git...)
[master 96bc23c] test
 1 file changed, 1 insertion(+)
 create mode 100644 xxx
renn:/tmp/test$ ls -la
total 56
drwxrwxr-x  3 jk   users  4096 Feb 16 13:48 .
drwxrwxrwt 52 root root  36864 Feb 16 13:46 ..
drwxrwxr-x  9 jk   users  4096 Feb 16 13:48 .git
-rw-rw-r--  1 jk   users    28 Feb 16 13:47 .gitattributes
-rw-rw-r--  1 jk   users     4 Feb 16 13:48 xxx

renn:/tmp/test$ git check-attr --all xxx
xxx: annex.largefiles: anything
xxx: filter: annex


# End of transcript or log.
"""]]

### Have you had any luck using git-annex before? (Sometimes we get tired of reading bug reports all day and a lil' positive end note does wonders)

Yes, like it a lot.  Many thanks.

