From bc312c7431877b3b788de5e7ce5ee743be73c0ba Mon Sep 17 00:00:00 2001
From: dummy <dummy@example.com>
Date: Tue, 10 Jun 2014 22:13:58 +0000
Subject: [PATCH] remove TH

---
 lens.cabal                          | 19 +------------------
 src/Control/Lens.hs                 |  8 ++------
 src/Control/Lens/Cons.hs            |  2 --
 src/Control/Lens/Internal/Fold.hs   |  2 --
 src/Control/Lens/Operators.hs       |  2 +-
 src/Control/Lens/Prism.hs           |  2 --
 src/Control/Monad/Primitive/Lens.hs |  1 -
 7 files changed, 4 insertions(+), 32 deletions(-)

diff --git a/lens.cabal b/lens.cabal
index d70c2f4..28af768 100644
--- a/lens.cabal
+++ b/lens.cabal
@@ -10,7 +10,7 @@ stability:     provisional
 homepage:      http://github.com/ekmett/lens/
 bug-reports:   http://github.com/ekmett/lens/issues
 copyright:     Copyright (C) 2012-2014 Edward A. Kmett
-build-type:    Custom
+build-type:    Simple
 -- build-tools:   cpphs
 tested-with:   GHC == 7.4.1, GHC == 7.4.2, GHC == 7.6.3, GHC == 7.8.1, GHC == 7.8.2
 synopsis:      Lenses, Folds and Traversals
@@ -220,7 +220,6 @@ library
     Control.Exception.Lens
     Control.Lens
     Control.Lens.Action
-    Control.Lens.At
     Control.Lens.Combinators
     Control.Lens.Cons
     Control.Lens.Each
@@ -248,29 +247,24 @@ library
     Control.Lens.Internal.Reflection
     Control.Lens.Internal.Review
     Control.Lens.Internal.Setter
-    Control.Lens.Internal.TH
     Control.Lens.Internal.Zoom
     Control.Lens.Iso
     Control.Lens.Lens
     Control.Lens.Level
     Control.Lens.Loupe
     Control.Lens.Operators
-    Control.Lens.Plated
     Control.Lens.Prism
     Control.Lens.Reified
     Control.Lens.Review
     Control.Lens.Setter
-    Control.Lens.TH
     Control.Lens.Traversal
     Control.Lens.Tuple
     Control.Lens.Type
     Control.Lens.Wrapped
     Control.Lens.Zoom
-    Control.Monad.Error.Lens
     Control.Monad.Primitive.Lens
     Control.Parallel.Strategies.Lens
     Control.Seq.Lens
-    Data.Aeson.Lens
     Data.Array.Lens
     Data.Bits.Lens
     Data.ByteString.Lens
@@ -293,17 +287,10 @@ library
     Data.Typeable.Lens
     Data.Vector.Lens
     Data.Vector.Generic.Lens
-    Generics.Deriving.Lens
-    GHC.Generics.Lens
     System.Exit.Lens
     System.FilePath.Lens
-    System.IO.Error.Lens
-    Language.Haskell.TH.Lens
     Numeric.Lens
 
-  other-modules:
-    Control.Lens.Internal.TupleIxedTH
-
   cpp-options: -traditional
 
   if flag(safe)
@@ -405,7 +392,6 @@ test-suite doctests
       deepseq,
       doctest        >= 0.9.1,
       filepath,
-      generic-deriving,
       mtl,
       nats,
       parallel,
@@ -443,7 +429,6 @@ benchmark plated
     comonad,
     criterion,
     deepseq,
-    generic-deriving,
     lens,
     transformers
 
@@ -478,7 +463,6 @@ benchmark unsafe
     comonads-fd,
     criterion,
     deepseq,
-    generic-deriving,
     lens,
     transformers
 
@@ -495,6 +479,5 @@ benchmark zipper
     comonads-fd,
     criterion,
     deepseq,
-    generic-deriving,
     lens,
     transformers
diff --git a/src/Control/Lens.hs b/src/Control/Lens.hs
index 7e15267..433f1fc 100644
--- a/src/Control/Lens.hs
+++ b/src/Control/Lens.hs
@@ -41,7 +41,6 @@
 ----------------------------------------------------------------------------
 module Control.Lens
   ( module Control.Lens.Action
-  , module Control.Lens.At
   , module Control.Lens.Cons
   , module Control.Lens.Each
   , module Control.Lens.Empty
@@ -53,12 +52,11 @@ module Control.Lens
   , module Control.Lens.Lens
   , module Control.Lens.Level
   , module Control.Lens.Loupe
-  , module Control.Lens.Plated
   , module Control.Lens.Prism
   , module Control.Lens.Reified
   , module Control.Lens.Review
   , module Control.Lens.Setter
-#ifndef DISABLE_TEMPLATE_HASKELL
+#if 0
   , module Control.Lens.TH
 #endif
   , module Control.Lens.Traversal
@@ -69,7 +67,6 @@ module Control.Lens
   ) where
 
 import Control.Lens.Action
-import Control.Lens.At
 import Control.Lens.Cons
 import Control.Lens.Each
 import Control.Lens.Empty
@@ -81,12 +78,11 @@ import Control.Lens.Iso
 import Control.Lens.Lens
 import Control.Lens.Level
 import Control.Lens.Loupe
-import Control.Lens.Plated
 import Control.Lens.Prism
 import Control.Lens.Reified
 import Control.Lens.Review
 import Control.Lens.Setter
-#ifndef DISABLE_TEMPLATE_HASKELL
+#if 0
 import Control.Lens.TH
 #endif
 import Control.Lens.Traversal
diff --git a/src/Control/Lens/Cons.hs b/src/Control/Lens/Cons.hs
index a80e9c8..7d27b80 100644
--- a/src/Control/Lens/Cons.hs
+++ b/src/Control/Lens/Cons.hs
@@ -55,8 +55,6 @@ import           Data.Vector.Unboxed (Unbox)
 import qualified Data.Vector.Unboxed as Unbox
 import           Data.Word
 
-{-# ANN module "HLint: ignore Eta reduce" #-}
-
 -- $setup
 -- >>> :set -XNoOverloadedStrings
 -- >>> import Control.Lens
diff --git a/src/Control/Lens/Internal/Fold.hs b/src/Control/Lens/Internal/Fold.hs
index ab09c6b..43aa905 100644
--- a/src/Control/Lens/Internal/Fold.hs
+++ b/src/Control/Lens/Internal/Fold.hs
@@ -37,8 +37,6 @@ import Data.Maybe
 import Data.Semigroup hiding (Min, getMin, Max, getMax)
 import Data.Reflection
 
-{-# ANN module "HLint: ignore Avoid lambda" #-}
-
 ------------------------------------------------------------------------------
 -- Folding
 ------------------------------------------------------------------------------
diff --git a/src/Control/Lens/Operators.hs b/src/Control/Lens/Operators.hs
index 9992e63..631e8e6 100644
--- a/src/Control/Lens/Operators.hs
+++ b/src/Control/Lens/Operators.hs
@@ -111,7 +111,7 @@ module Control.Lens.Operators
   , (<#~)
   , (<#=)
   -- * "Control.Lens.Plated"
-  , (...)
+  --, (...)
   -- * "Control.Lens.Review"
   , ( # )
   -- * "Control.Lens.Setter"
diff --git a/src/Control/Lens/Prism.hs b/src/Control/Lens/Prism.hs
index 9e0bec7..0cf6737 100644
--- a/src/Control/Lens/Prism.hs
+++ b/src/Control/Lens/Prism.hs
@@ -59,8 +59,6 @@ import Unsafe.Coerce
 import Data.Profunctor.Unsafe
 #endif
 
-{-# ANN module "HLint: ignore Use camelCase" #-}
-
 -- $setup
 -- >>> :set -XNoOverloadedStrings
 -- >>> import Control.Lens
diff --git a/src/Control/Monad/Primitive/Lens.hs b/src/Control/Monad/Primitive/Lens.hs
index ee942c6..2f37134 100644
--- a/src/Control/Monad/Primitive/Lens.hs
+++ b/src/Control/Monad/Primitive/Lens.hs
@@ -20,7 +20,6 @@ import Control.Lens
 import Control.Monad.Primitive (PrimMonad(..))
 import GHC.Prim (State#)
 
-{-# ANN module "HLint: ignore Unused LANGUAGE pragma" #-}
 
 prim :: (PrimMonad m) => Iso' (m a) (State# (PrimState m) -> (# State# (PrimState m), a #))
 prim = iso internal primitive
-- 
2.0.0

